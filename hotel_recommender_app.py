import tkinter as tk
from tkinter import scrolledtext, messagebox
import pandas as pd
import joblib
from sklearn.metrics.pairwise import cosine_similarity

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –¥–∞–Ω–Ω—ã—Ö
model = joblib.load("model.pkl")
vectorizer = joblib.load("vectorizer.pkl")
df_grouped = pd.read_csv("Data/grouped_hotels.csv")

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π
def recommend_hotels():
    user_input = entry.get()
    
    if not user_input.strip():
        messagebox.showwarning("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º!")
        return
    
    user_vector = vectorizer.transform([user_input])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–æ–¥ –≤ –≤–µ–∫—Ç–æ—Ä
    hotel_vectors = vectorizer.transform(df_grouped["clean_text"])  # –í–µ–∫—Ç–æ—Ä—ã –æ—Ç–µ–ª–µ–π

    similarities = cosine_similarity(user_vector, hotel_vectors).flatten()  # –°—á–∏—Ç–∞–µ–º —Å—Ö–æ–¥—Å—Ç–≤–æ
    top_indices = similarities.argsort()[::-1][:5]  # –ë–µ—Ä—ë–º —Ç–æ–ø-5

    result_text.config(state=tk.NORMAL)
    result_text.delete(1.0, tk.END)

    if similarities[top_indices[0]] == 0:
        result_text.insert(tk.END, "‚ùå –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        result_text.insert(tk.END, "üéØ –¢–æ–ø 5 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:\n\n")
        for idx, i in enumerate(top_indices, 1):
            result_text.insert(
                tk.END, f"{idx}. {df_grouped['name_ru'][i]} (–†–µ–π—Ç–∏–Ω–≥: {df_grouped['rating'][i]:.2f})\n"
            )
    
    result_text.config(state=tk.DISABLED)

# –°–æ–∑–¥–∞–Ω–∏–µ GUI
app = tk.Tk()
app.title("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç–µ–ª–µ–π")
app.geometry("500x400")

# –í–∏–¥–∂–µ—Ç—ã
tk.Label(app, text="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:", font=("Arial", 12)).pack(pady=5)
entry = tk.Entry(app, width=50, font=("Arial", 12))
entry.pack(pady=5)

tk.Button(app, text="üîç –ù–∞–π—Ç–∏ –æ—Ç–µ–ª–∏", font=("Arial", 12), command=recommend_hotels).pack(pady=10)

result_text = scrolledtext.ScrolledText(app, width=60, height=10, font=("Arial", 10), state=tk.DISABLED)
result_text.pack(pady=5)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.mainloop()
